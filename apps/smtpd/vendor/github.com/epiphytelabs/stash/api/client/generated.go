// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package client

import (
	"context"
	"time"

	"github.com/Khan/genqlient/graphql"
)

type LabelInput struct {
	Key    string   `json:"key"`
	Values []string `json:"values"`
}

// GetKey returns LabelInput.Key, and is useful for accessing the field via an interface.
func (v *LabelInput) GetKey() string { return v.Key }

// GetValues returns LabelInput.Values, and is useful for accessing the field via an interface.
func (v *LabelInput) GetValues() []string { return v.Values }

// __blobCreateInput is used internally by genqlient
type __blobCreateInput struct {
	Body   string       `json:"body"`
	Labels []LabelInput `json:"labels"`
}

// GetBody returns __blobCreateInput.Body, and is useful for accessing the field via an interface.
func (v *__blobCreateInput) GetBody() string { return v.Body }

// GetLabels returns __blobCreateInput.Labels, and is useful for accessing the field via an interface.
func (v *__blobCreateInput) GetLabels() []LabelInput { return v.Labels }

// __blobDataInput is used internally by genqlient
type __blobDataInput struct {
	Id string `json:"id"`
}

// GetId returns __blobDataInput.Id, and is useful for accessing the field via an interface.
func (v *__blobDataInput) GetId() string { return v.Id }

// __blobGetInput is used internally by genqlient
type __blobGetInput struct {
	Id string `json:"id"`
}

// GetId returns __blobGetInput.Id, and is useful for accessing the field via an interface.
func (v *__blobGetInput) GetId() string { return v.Id }

// __blobListInput is used internally by genqlient
type __blobListInput struct {
	Labels []LabelInput `json:"labels"`
}

// GetLabels returns __blobListInput.Labels, and is useful for accessing the field via an interface.
func (v *__blobListInput) GetLabels() []LabelInput { return v.Labels }

// blobCreateBlobCreateBlob includes the requested fields of the GraphQL type Blob.
type blobCreateBlobCreateBlob struct {
	Created time.Time                             `json:"created"`
	Hash    string                                `json:"hash"`
	Labels  []blobCreateBlobCreateBlobLabelsLabel `json:"labels"`
}

// GetCreated returns blobCreateBlobCreateBlob.Created, and is useful for accessing the field via an interface.
func (v *blobCreateBlobCreateBlob) GetCreated() time.Time { return v.Created }

// GetHash returns blobCreateBlobCreateBlob.Hash, and is useful for accessing the field via an interface.
func (v *blobCreateBlobCreateBlob) GetHash() string { return v.Hash }

// GetLabels returns blobCreateBlobCreateBlob.Labels, and is useful for accessing the field via an interface.
func (v *blobCreateBlobCreateBlob) GetLabels() []blobCreateBlobCreateBlobLabelsLabel { return v.Labels }

// blobCreateBlobCreateBlobLabelsLabel includes the requested fields of the GraphQL type Label.
type blobCreateBlobCreateBlobLabelsLabel struct {
	Key    string   `json:"key"`
	Values []string `json:"values"`
}

// GetKey returns blobCreateBlobCreateBlobLabelsLabel.Key, and is useful for accessing the field via an interface.
func (v *blobCreateBlobCreateBlobLabelsLabel) GetKey() string { return v.Key }

// GetValues returns blobCreateBlobCreateBlobLabelsLabel.Values, and is useful for accessing the field via an interface.
func (v *blobCreateBlobCreateBlobLabelsLabel) GetValues() []string { return v.Values }

// blobCreateResponse is returned by blobCreate on success.
type blobCreateResponse struct {
	BlobCreate blobCreateBlobCreateBlob `json:"blobCreate"`
}

// GetBlobCreate returns blobCreateResponse.BlobCreate, and is useful for accessing the field via an interface.
func (v *blobCreateResponse) GetBlobCreate() blobCreateBlobCreateBlob { return v.BlobCreate }

// blobDataBlob includes the requested fields of the GraphQL type Blob.
type blobDataBlob struct {
	Data string `json:"data"`
}

// GetData returns blobDataBlob.Data, and is useful for accessing the field via an interface.
func (v *blobDataBlob) GetData() string { return v.Data }

// blobDataResponse is returned by blobData on success.
type blobDataResponse struct {
	Blob blobDataBlob `json:"blob"`
}

// GetBlob returns blobDataResponse.Blob, and is useful for accessing the field via an interface.
func (v *blobDataResponse) GetBlob() blobDataBlob { return v.Blob }

// blobGetBlob includes the requested fields of the GraphQL type Blob.
type blobGetBlob struct {
	Created time.Time                `json:"created"`
	Hash    string                   `json:"hash"`
	Labels  []blobGetBlobLabelsLabel `json:"labels"`
}

// GetCreated returns blobGetBlob.Created, and is useful for accessing the field via an interface.
func (v *blobGetBlob) GetCreated() time.Time { return v.Created }

// GetHash returns blobGetBlob.Hash, and is useful for accessing the field via an interface.
func (v *blobGetBlob) GetHash() string { return v.Hash }

// GetLabels returns blobGetBlob.Labels, and is useful for accessing the field via an interface.
func (v *blobGetBlob) GetLabels() []blobGetBlobLabelsLabel { return v.Labels }

// blobGetBlobLabelsLabel includes the requested fields of the GraphQL type Label.
type blobGetBlobLabelsLabel struct {
	Key    string   `json:"key"`
	Values []string `json:"values"`
}

// GetKey returns blobGetBlobLabelsLabel.Key, and is useful for accessing the field via an interface.
func (v *blobGetBlobLabelsLabel) GetKey() string { return v.Key }

// GetValues returns blobGetBlobLabelsLabel.Values, and is useful for accessing the field via an interface.
func (v *blobGetBlobLabelsLabel) GetValues() []string { return v.Values }

// blobGetResponse is returned by blobGet on success.
type blobGetResponse struct {
	Blob blobGetBlob `json:"blob"`
}

// GetBlob returns blobGetResponse.Blob, and is useful for accessing the field via an interface.
func (v *blobGetResponse) GetBlob() blobGetBlob { return v.Blob }

// blobListBlobsBlob includes the requested fields of the GraphQL type Blob.
type blobListBlobsBlob struct {
	Created time.Time                      `json:"created"`
	Hash    string                         `json:"hash"`
	Labels  []blobListBlobsBlobLabelsLabel `json:"labels"`
}

// GetCreated returns blobListBlobsBlob.Created, and is useful for accessing the field via an interface.
func (v *blobListBlobsBlob) GetCreated() time.Time { return v.Created }

// GetHash returns blobListBlobsBlob.Hash, and is useful for accessing the field via an interface.
func (v *blobListBlobsBlob) GetHash() string { return v.Hash }

// GetLabels returns blobListBlobsBlob.Labels, and is useful for accessing the field via an interface.
func (v *blobListBlobsBlob) GetLabels() []blobListBlobsBlobLabelsLabel { return v.Labels }

// blobListBlobsBlobLabelsLabel includes the requested fields of the GraphQL type Label.
type blobListBlobsBlobLabelsLabel struct {
	Key    string   `json:"key"`
	Values []string `json:"values"`
}

// GetKey returns blobListBlobsBlobLabelsLabel.Key, and is useful for accessing the field via an interface.
func (v *blobListBlobsBlobLabelsLabel) GetKey() string { return v.Key }

// GetValues returns blobListBlobsBlobLabelsLabel.Values, and is useful for accessing the field via an interface.
func (v *blobListBlobsBlobLabelsLabel) GetValues() []string { return v.Values }

// blobListResponse is returned by blobList on success.
type blobListResponse struct {
	Blobs []blobListBlobsBlob `json:"blobs"`
}

// GetBlobs returns blobListResponse.Blobs, and is useful for accessing the field via an interface.
func (v *blobListResponse) GetBlobs() []blobListBlobsBlob { return v.Blobs }

func blobCreate(
	ctx context.Context,
	client graphql.Client,
	body string,
	labels []LabelInput,
) (*blobCreateResponse, error) {
	req := &graphql.Request{
		OpName: "blobCreate",
		Query: `
mutation blobCreate ($body: String!, $labels: [LabelInput!]) {
	blobCreate(body: $body, labels: $labels) {
		created
		hash
		labels {
			key
			values
		}
	}
}
`,
		Variables: &__blobCreateInput{
			Body:   body,
			Labels: labels,
		},
	}
	var err error

	var data blobCreateResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func blobData(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*blobDataResponse, error) {
	req := &graphql.Request{
		OpName: "blobData",
		Query: `
query blobData ($id: ID!) {
	blob(id: $id) {
		data
	}
}
`,
		Variables: &__blobDataInput{
			Id: id,
		},
	}
	var err error

	var data blobDataResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func blobGet(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*blobGetResponse, error) {
	req := &graphql.Request{
		OpName: "blobGet",
		Query: `
query blobGet ($id: ID!) {
	blob(id: $id) {
		created
		hash
		labels {
			key
			values
		}
	}
}
`,
		Variables: &__blobGetInput{
			Id: id,
		},
	}
	var err error

	var data blobGetResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func blobList(
	ctx context.Context,
	client graphql.Client,
	labels []LabelInput,
) (*blobListResponse, error) {
	req := &graphql.Request{
		OpName: "blobList",
		Query: `
query blobList ($labels: [LabelInput!]) {
	blobs(labels: $labels) {
		created
		hash
		labels {
			key
			values
		}
	}
}
`,
		Variables: &__blobListInput{
			Labels: labels,
		},
	}
	var err error

	var data blobListResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
